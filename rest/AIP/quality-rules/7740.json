{
    "id": 7740,
    "name": "CWE-79: Avoid cross-site scripting DOM vulnerabilities",
    "href": "AIP/quality-rules/7740",
    "critical": true,
    "associatedValueName": "Call stack from user input source down to the target HTML user output method",
    "description": "Using CAST dataflow engine, this metric detects paths from user input methods to HTML user output methods which are open vulnerabilities to cross-site scripting injection flaws (XSS).\n\nThe list of user input methods can be customized as well as the output method and the sanitization methods (methods encoding the output to avoid hacks).",
    "output": "List all methods that miss calling the required sanitization method and provides access to the path demonstrating the vulnerability :\n\nIt provides the following information:\n- The full name of the method that calls the user input method. That is the source of the XSS flaw.\n- Call stack from user input source down to the target HTML user output method.",
    "rationale": "The most dangerous web application vulnerabilty is known as cross-site scripting (XSS). It is caused by malicious script echoed back into HTML returned from a trusted site, and runs under trusted context.\nTo avoid the creation of XSS flaws, the Open Web Application Security Project (OWASP) recommends both input validation and \"strong output encoding\" or sanitization:\n\"Strong output encoding. Ensure that all user-supplied data is appropriately entity encoded (either HTML or XML depending on the output mechanism) before rendering, taking the approach to encode all characters other than a very limited subset. This is the approach of the Microsoft Anti-XSS library, and the forthcoming OWASP PHP Anti-XSS library. Also, set the character encodings for each page you output, which will reduce exposure to some variants.\"\n\nThis metric ensures that the appropriate output encoding (sanitization) is coded, as close as possible to user input method call, making security checking easier for all team members.",
    "reference": "CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')\nhttp://cwe.mitre.org/data/definitions/79.html\n\nOpen Web Application Security Project (OWASP) \nhttp://www.owasp.org/index.php/Top_10_2007\n\nCISQ rule: ASCSM-CWE-79.",
    "remediation": "Code the appropriate sanitization methods as close as possible to the user input method call.",
    "total": "The number of methods calling user input methods",
    "businessCriteria": [
        {
            "id": 66031,
            "name": "Programming Practices",
            "href": "AIP/business-criteria/66031"
        },
        {
            "id": 60016,
            "name": "Security",
            "href": "AIP/business-criteria/60016"
        }
    ],
    "technicalCriteria": [
        {
            "id": 66062,
            "name": "Secure Coding - Input Validation",
            "weight": 9,
            "critical": true
        }
    ],
    "technologies": [
        {
            "id": 138383,
            "name": "C#",
            "href": "AIP/technologies/138383"
        },
        {
            "id": 140029,
            "name": "JEE",
            "href": "AIP/technologies/140029"
        },
        {
            "id": 138385,
            "name": "VB.NET",
            "href": "AIP/technologies/138385"
        }
    ],
    "qualityStandards": [
        {
            "standard": "AIP",
            "id": "AIP-GDPR",
            "name": "General Data Protection Regulation",
            "url": null,
            "description": null
        },
        {
            "standard": "AIP",
            "id": "CROSS-SITE-VULNERABILITY",
            "name": "Cross Site Vulnerability",
            "url": null,
            "description": null
        },
        {
            "standard": "CISQ",
            "id": "ASCSM-CWE-79",
            "name": "Cross-site Scripting Improper Input Neutralization",
            "url": null,
            "description": null
        },
        {
            "standard": "CWE",
            "id": "CWE-79",
            "name": "Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')",
            "url": "https://cwe.mitre.org/data/definitions/79.html",
            "description": null
        },
        {
            "standard": "OWASP",
            "id": "A3-2013",
            "name": "Cross-Site Scripting (XSS)",
            "url": "https://www.owasp.org/index.php/Top_10_2013-A3-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application takes untrusted data and sends it to a web browser without proper validation or escaping. XSS allows attackers to execute scripts in the victims' browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        },
        {
            "standard": "OWASP",
            "id": "A7-2017",
            "name": "Cross-Site Scripting (XSS)",
            "url": "https://www.owasp.org/index.php/Top_10-2017_A7-Cross-Site_Scripting_(XSS)",
            "description": "XSS flaws occur whenever an application includes untrusted data in a new web page without proper validation or escaping, or updates an existing web page with user-supplied data using a browser API that can create HTML or JavaScript. XSS allows attackers to execute scripts in the victim's browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites."
        }
    ]
}
